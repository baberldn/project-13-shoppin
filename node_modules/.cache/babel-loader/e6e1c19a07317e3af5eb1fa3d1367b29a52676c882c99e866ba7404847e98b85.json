{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\beril\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\project-13-shoppin\\\\src\\\\context\\\\GlobalContext.js\",\n  _s = $RefreshSig$();\n// GlobalContext.js\n\nimport React, { createContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// GlobalContext adında bir context oluşturuyoruz\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GlobalContext = /*#__PURE__*/createContext();\n\n// GlobalProvider bileşeni ile 'orders' ve 'addOrder' fonksiyonunu alt bileşenlere sağlıyoruz\nexport const GlobalProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  // orders state'i başta boş bir dizi olarak tanımlanır\n  const [orders, setOrders] = useState([]);\n\n  // Yeni bir sipariş ekleyen fonksiyon\n  const addOrder = order => {\n    setOrders(prevOrders => [...prevOrders, order]); // Yeni order'ı ekler\n  };\n\n  // Context.Provider kullanarak 'orders' ve 'addOrder' verilerini tüm çocuk bileşenlere sağlıyoruz\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      orders,\n      addOrder\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n// PropTypes ile children bileşenlerinin gerekli olduğunu belirtiyoruz\n_s(GlobalProvider, \"fJydDDvPVS5YoOOIxPLx2ckW3UY=\");\n_c = GlobalProvider;\nGlobalProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","createContext","useState","PropTypes","jsxDEV","_jsxDEV","GlobalContext","GlobalProvider","_ref","_s","children","orders","setOrders","addOrder","order","prevOrders","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","node","isRequired","$RefreshReg$"],"sources":["C:/Users/beril/OneDrive/Masaüstü/project-13-shoppin/src/context/GlobalContext.js"],"sourcesContent":["// GlobalContext.js\r\n\r\nimport React, { createContext, useState } from \"react\"; \r\nimport PropTypes from \"prop-types\"; \r\n\r\n// GlobalContext adında bir context oluşturuyoruz\r\nexport const GlobalContext = createContext(); \r\n\r\n// GlobalProvider bileşeni ile 'orders' ve 'addOrder' fonksiyonunu alt bileşenlere sağlıyoruz\r\nexport const GlobalProvider = ({ children }) => {\r\n  // orders state'i başta boş bir dizi olarak tanımlanır\r\n  const [orders, setOrders] = useState([]); \r\n\r\n  // Yeni bir sipariş ekleyen fonksiyon\r\n  const addOrder = (order) => {\r\n    setOrders((prevOrders) => [...prevOrders, order]); // Yeni order'ı ekler\r\n  };\r\n\r\n  // Context.Provider kullanarak 'orders' ve 'addOrder' verilerini tüm çocuk bileşenlere sağlıyoruz\r\n  return (\r\n    <GlobalContext.Provider value={{ orders, addOrder }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n\r\n// PropTypes ile children bileşenlerinin gerekli olduğunu belirtiyoruz\r\nGlobalProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AACtD,OAAOC,SAAS,MAAM,YAAY;;AAElC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,aAAa,gBAAGL,aAAa,CAAC,CAAC;;AAE5C;AACA,OAAO,MAAMM,cAAc,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACzC;EACA,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMW,QAAQ,GAAIC,KAAK,IAAK;IAC1BF,SAAS,CAAEG,UAAU,IAAK,CAAC,GAAGA,UAAU,EAAED,KAAK,CAAC,CAAC,CAAC,CAAC;EACrD,CAAC;;EAED;EACA,oBACET,OAAA,CAACC,aAAa,CAACU,QAAQ;IAACC,KAAK,EAAE;MAAEN,MAAM;MAAEE;IAAS,CAAE;IAAAH,QAAA,EACjDA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;;AAED;AAAAZ,EAAA,CAjBaF,cAAc;AAAAe,EAAA,GAAdf,cAAc;AAkB3BA,cAAc,CAACgB,SAAS,GAAG;EACzBb,QAAQ,EAAEP,SAAS,CAACqB,IAAI,CAACC;AAC3B,CAAC;AAAC,IAAAH,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}